/*
 * Name:	WeaponBoxesConfig
 * Date:	2018-11-15
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all configuration about weapon boxes.
 */
namespace Intrusion.Server
{
	public class WeaponBoxesConfig
	{
		private static fields ["_mWeapons" as Array /* of WeaponBoxInfo */ ];
	
		// Initializes all weapon boxe's class names.
		public static method Init {
			_mWeapons = [
				[west, WeaponBoxType.Basic, "Box_NATO_Wps_F", Technology.None] new WeaponBoxInfo,
				[east, WeaponBoxType.Basic, "Box_East_Wps_F", Technology.None] new WeaponBoxInfo,
				[west, WeaponBoxType.Grenades, "Box_NATO_Grenades_F", Technology.None] new WeaponBoxInfo,
				[east, WeaponBoxType.Grenades, "Box_East_Grenades_F", Technology.None] new WeaponBoxInfo,
				[west, WeaponBoxType.Launchers, "Box_NATO_WpsLaunch_F", Technology.Launchers] new WeaponBoxInfo,
				[east, WeaponBoxType.Launchers, "Box_East_WpsLaunch_F", Technology.Launchers] new WeaponBoxInfo,
				[west, WeaponBoxType.Ordnance, "Box_NATO_Wps_F", Technology.Launchers] new WeaponBoxInfo,
				[east, WeaponBoxType.Ordnance, "Box_East_Wps_F", Technology.Launchers] new WeaponBoxInfo,
			];
		};
		
		// Gets the weapon box class name that belongs to a defined side and a weapon box type.
		// Returns (String): A weapon class name. Empty string if the weapon does not exist.
		public static method String GetWeaponClassNameBySideAndBoxType {
			params ["_side" as Side, "_weaponBoxType" as WeaponBoxType];
			
			scopeName "main";
			
			{
				if (_x.Side == _side && _x.WeaponBoxType == _weaponBoxType) then {
					(_x.ClassName) breakOut "main"; // TODO SQX: Should work without parenthesis...
				};
			} foreach _mWeapons as WeaponBoxInfo;
			
			""
		};
		
		public static method WeaponBoxInfo GetWeaponBoxInfo("_weaponBoxType" as WeaponBoxType)
		{
			scopeName "main";
		
			{
				if (_x.WeaponBoxType == _weaponBoxType) then {
					_x breakOut "main";
				};
			} foreach _mWeapons as WeaponBoxInfo;
			
			classNull
		};
	};
};
