/*
 * Name:    VehicleHandler
 * Version: 1.0
 * Author:  Engima
 *
 * Description:
 * Handles all mission vehicles.
 */
using Intrusion.Common;
 
namespace Intrusion.Server
{
	public class FreeVehiclesService
	{
		private static fields ["_mVehicleSpawners" as Array /* of VehicleSpawner */];
	
		// Starts the thread that runs though whole of the mission and assigns free vehicles to all sides.
		private static method Run {
		    private ["_vehiclesAtBaseCount" as Scalar];
		    [str _this + " VehicleHandler.DoStartFreeVehiclesThread"] call LogHandler.Debug;

		    while { true } do {
		    	{
		    		private ["_spawner" as VehicleSpawner];
		    		_spawner = _x;
		    		
		    		// Count vehicles at the base
		    		_vehiclesAtBaseCount = call _spawner.CountFreeVehiclesAtBase;
		    		
			        // If less than max, spawn a new one.
			        if (_vehiclesAtBaseCount < GameplayConfig.MaxFreeVehiclesAtBase) then {
			        	call _spawner.SpawnFreeVehicleOnCarpark;
			        };
			        
		    	} foreach _mVehicleSpawners as VehicleSpawner;
		    	
		        if (time < 30) then {
		            sleep 3;
		        }
		        else {
		            sleep (60 * 6); // sleep in 6 minutes
		        };
			};
		};
		
		// Starts the thread that runs though whole of the mission and assigns some free vehicles to all sides.
		public static method RunAsync {
			params ["_vehicleSpawners" as Array /* of VehicleSpawner */];
			
			_mVehicleSpawners = _vehicleSpawners;
			spawn _self.Run;
		};
	};
};
